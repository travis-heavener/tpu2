main:
    mov BX, BP
    push BL
    push BH
    mov BP, SP
    push 0
    push 0
    push 1
    push 0
    pop BL
    pop AL
    or AL, 0
    jz __J2
    mov AL, 1
    jmp __J2
    __J2:
    or BL, 0
    jz __J3
    mov BL, 1
    jmp __J3
    __J3:
    and AL, BL
    push AL
    xor AH, AH
    pop AL
    add AX, 0
    jz __J1
    mov BX, BP
    push BL
    push BH
    mov BP, SP
    push 13
    push 0
    push 91
    push 0
    pop BH
    pop BL
    pop AH
    pop AL
    add AX, BX
    push AL
    push AH
    pop BH
    pop BL
    rmov $-6, BL
    rmov $-5, BH
    push BL
    push BH
    pop
    pop
    mov SP, BP
    pop BH
    pop BL
    mov BP, BX
    jmp __J0
    __J1:
    mov BX, BP
    push BL
    push BH
    mov BP, SP
    push 0
    push 0
    push 11
    push 0
    pop BH
    pop BL
    pop AH
    pop AL
    add AX, BX
    push AL
    push AH
    pop BH
    pop BL
    rmov $-6, BL
    rmov $-5, BH
    push BL
    push BH
    pop
    pop
    mov SP, BP
    pop BH
    pop BL
    mov BP, BX
    jmp __J0
    __J0:
    rmov DL, $-4
    push DL
    rmov DL, $-4
    push DL
    push 0
    push 0
    pop BH
    pop BL
    pop AH
    pop AL
    add AX, BX
    push AL
    push AH
    pop
    pop
    mov SP, BP
    pop BH
    pop BL
    mov BP, BX
    hlt
